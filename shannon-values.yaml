# Default values for Shannon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# protocol string refers to the decentralized framework that enables applications
# to access reliable and censorship-resistant infrastructure (e.g. shannon or morse).
protocol: shannon

# network string refers to the different stages of the protocol testing phase
# before it goes live to on the Mainnet. (e.g. mainnet, testnet, devnet)
#
# see https://dev.poktroll.com/category/networks
network: testnet-alpha

# version string refers to the unique version of the poktrolld computer
# software.
#
# see https://dev.poktroll.com/operate/faq/full_node_faq?_highlight=version#how-do-i-check-the-node-version
version: 0.0.11-rc

# homeDirectory refers to the poktrolld working directory. This variable is
# shared across all every procol actors. Meaning that the working directory
# will be instantiated in the same path for every 
homeDirectory: /home/pocket/.poktroll

# shannon object refers to the root level values configuration for the shannon
# protocol to define the configuration for every protocol actors. This
# field is required when `.Values.protocol=shannon`.
#
# see https://dev.poktroll.com/category/protocol-actors for more information.
shannon:
  # relayminer key-value pairs refers to the relayminer configuration.
  relayminer:
    # activates the deployment of a relayminer and its resources.
    enabled: false
    # grpcInsecure allows gRPC over insecure channels for querying state in the CosmosSDK.
    #
    # see https://dev.poktroll.com/operate/cheat_sheets/supplier_cheatsheet#secure-vs-non-secure-query_node_grpc_url
    grpcInsecure: true
    # gasAdjustment refers to the adjustement factor to be multiplied by the gas
    # estmiation given by the tx simulation.
    #
    # see https://docs.cosmos.network/main/learn/beginner/tx-lifecycle#gas-and-fees
    gasAdjustment: 1.5
    # gasPrices specifies how much you are willing to pay per unit of gas.
    #
    # see https://docs.cosmos.network/main/learn/beginner/tx-lifecycle#gas-and-fees
    gasPrices: 0.0001upokt
    # keyringBackend refers the storage backend for the keyring implementation.
    #
    # see https://docs.cosmos.network/v0.46/run-node/keyring.html#available-backends-for-the-keyring
    keyringBackend: test
    # logs refers to the logging configuration
    logs:
      # level defines the log severity.
      #
      # see https://github.com/pokt-network/poktroll/blob/6759eec9f586358a12306fa8c92d18cb03ef6530/pkg/polylog/polyzero/levels.go#L39-L54
      level: info
    # keysSecretName injects a Kubernetes Secret that defines the signing key
    # inside the relayminer pod.
    keysSecretName: "poktrolld-keys"
    # config defines key-values pairs for the relayminer general configuration.
    #
    # see https://dev.poktroll.com/operate/configs/relayminer_config
    config:
      signing_key_name: supplier1
      # default_signing_key_names defines the list of key names from the keyring.
      # 
      # https://dev.poktroll.com/operate/configs/relayminer_config
      default_signing_key_names: [supplier1]
      # smt_store_path path to working directory for Sparse Merkle Tree.
      smt_store_path: /.poktroll/smt
      # pocket_node defines the different connectivity for the poktrolld node.
      #
      # see https://dev.poktroll.com/operate/configs/relayminer_config#pocket-node-connectivity
      pocket_node:
        # query_node_rpc_url sets the websocket connection to a pocket network node.
        #
        # see https://dev.poktroll.com/operate/configs/relayminer_config#query_node_rpc_url
        query_node_rpc_url: tcp://validator-poktroll-validator:26657
        # query_node_grpc_url sets the pocket node endpoint to read from Pocket Network.
        #
        # see https://dev.poktroll.com/operate/configs/relayminer_config#query_node_rpc_url
        query_node_grpc_url: tcp://validator-poktroll-validator:9090
        # tx_node_rpc_url sets the pocket node endpoint to write into Pocket Network.
        #
        # see https://dev.poktroll.com/operate/configs/relayminer_config#tx_node_rpc_url
        tx_node_rpc_url: tcp://validator-poktroll-validator:26657
      # suppliers defines a list of key-values pairs to define the suppliers managed
      # by this relayminer.
      #
      # e.g.
      # suppliers:
      #   - service_id: ollama
      #     service_config:
      #      backend_url: http://ollama:8547/
      #      publicly_exposed_endpoints:
      #        - relayminers
      #     listen_url: http://0.0.0.0:8546
      #   - service_id: anvil
      #     service_config:
      #      backend_url: http://anvil:8547/
      #      publicly_exposed_endpoints:
      #        - relayminers
      #     listen_url: http://0.0.0.0:8546
      #
      # see https://dev.poktroll.com/operate/configs/relayminer_config#suppliers
      suppliers:
        # service_id is a unique identifier to reference a service provided by
        # this relayminer.
      - service_id: anvil
        # service_config configures the supplier of this service.
        #
        # see https://dev.poktroll.com/operate/configs/relayminer_config#service_config
        service_config:
          # backend_url is the endpoint where the request will be forward for
          # this service.
          backend_url: http://anvil:8547/
          # publicly_exposed_endpoints are a list of host the relayminer will
          # accept request from.
          publicly_exposed_endpoints:
            - relayminer1
        # listen_url is the address from which the relayminer will start a
        # server to listen for incoming request for this service.
        #
        # see https://dev.poktroll.com/operate/configs/relayminer_config#listen_url
        listen_url: http://0.0.0.0:8545
      # metrics configures a Prometheus Exporter server for prometheus exporters to
      # read relayminer metrics.
      metrics:
        # enabled activates a Prometheus Exporter endpoint if set to true.
        enabled: true
        # addr is the address at which the server must listen to.
        addr: :9090
      # pprof configures a pprof endpoint for visualization and analysis of
      # profiling data.
      pprof:
        # enabled activates a pprof endpoint.
        enabled: true
        # addr is the address at which the server must listen to.
        addr: localhost:6060
      # ping configures a ping healh check server to test the connectivity of all backend URLs
      # https://dev.poktroll.com/operate/configs/relayminer_config#ping
      ping:
        # enabled activates the ping server.
        enabled: false
        # addr is the address at which the server must listen.
        addr: localhost:8081
    cosmossdk:
      clientConfig: |
        # specifies the broadcast mode for the TxService.Broadcast RPC
        broadcast-mode = "sync"
        # name of the targeted chain to send transaction
        chain-id = "poktroll"
        # specifies where keys are stored
        keyring-backend = "test"
        # rpc interface for the specified chain.
        node = "tcp://validator-poktroll-validator:26657"
        # client output format (json|text)
        output = "text"
    # prometheus is the root value configuration for prometheus operator.
    prometheus:
      # serviceMonitor represents the configuration for a Prometheus Operator
      # ServiceMonitor.
      serviceMonitor:
        # enabled activates the templating of a Prometheus Operator
        # ServiceMonitor.
        enabled: true
    # development are the globals settings to set up an development environment
    # on the relayminer pod.
    development:
      # delve configures a debugger for the Go programming language. Keep in
      # mind that debugging may be challenging if the binary was compiled
      # with optimizations and inlining enabled.
      #
      # see https://github.com/go-delve/delve/blob/master/Documentation/usage/dlv_exec.md
      delve:
        # enables executes the poktrolld binary with delve.
        enabled: false
        # addr is the address where the delve server listen to.
        addr: :40004
        # headless runs debug server only, in headless mode.
        headless: true
        # apiVersion selects JSON-RPC API version when headless.
        apiVersion: 2
        # acceptMulticlient allows a headless server to accept multiple client
        # connections via JSON-RPC or DAP.
        acceptMulticlient: true
    # image is the root configuration for the container image to be used for the
    # relayminer.
    image:
      # repository defines which container image will be pulled from a container
      # registry.
      repository: ghcr.io/pokt-network/poktrolld
     # pullPolicy defines the pull policy for the relayminer.
      pullPolicy: IfNotPresent
      # tag overrides the image tag.
      tag: "latest"
    # replicas defines the number of instances for the relayminer.
    replicas: 1
    # imagePullSecrets defines the information to authenticate with the
    # container registry.
    imagePullSecrets: []
    # resources is the root configuration for the resource isolation.
    resources:
      # preset defines the resource pre-configuration (cpu and memory) for the
      # relayminer (small, medium, large or none). If one or more values are
      # defined in .shannon.relayminer.resources.requests or
      # .shannon.relayminer.resources.limits, the preset pre-configuration is
      # discarded.
      preset: none
      # requests defines the minimum resources a container needs to run.
      requests:
        # cpu defines the cpu minimum resources.
        cpu: 2000m
        # memory defines the memory minimum resources.
        memory: 2Gi
      # limits defines the maximum resources a container can use.
      limits:
        # cpu defines the cpu maximum resource.
        cpu: 3000m
        # memory defines the memory maximum resource.
        memory: 3Gi
    # service is the root configuration when defining a Kubernetes Service object for the relayminer.
    service:
      # type defines the type of service we want to use for the relayminer servers
      # (ClusterIP, NodePort, etc...).
      #
      # see https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
      type: ClusterIP
    # volumes are the additional volume for the relayminer pod.
    volumes: []
    # volumeMounts are the additional volume mount point for the relayminer pod.
    #
    # e.g.
    # - name: foo
    #   mountPath: "/etc/foo"
    #   readOnly: true
    volumeMounts: []
    # livenessProbe configures the mechanism that checks whether the relayminer
    # container is still up and running.
    livenessProbe:
      # ping configures a HTTP request as a probe against the ping server in the relayminer.
      # Make sure to active the ping service in .shannon.relayminer.config.ping
      # https://dev.poktroll.com/operate/configs/relayminer_config#ping
      ping:
        # enabled activates the http client to request the ping server.
        enabled: true
    # autoscaling ist the root configuration for the HorizontalPodAutoscaler.
    autoscaling:
      # enable activates the templating of a HorizontalPodAutoscaler resource.
      enabled: false
      # minReplicas defines the minimum number of replicas that should be maintained.
      minReplicas: 1
      # maxReplicas defines the maximum number of replicas that the HPA can
      # scale up to when the demand increases.
      maxReplicas: 100
      # targetCPUUtilizationPercentage defines the percentage of requested CPU
      # usage across all pods.
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage defines the percentage of requested
      # memory usage across all pods.
      targetMemoryUtilizationPercentage: 80
    # podAnnotations are key-values pairs metadata attched to Pods.
    #
    # e.g.
    # podAnnotations:
    #   version: "1.2.3"
    #   commitHash: "abc123def456"
    podAnnotations: {}
    # podSecurityContext are key-values pairs to define the security settings
    # for all containers within a pod.
    #
    # e.g
    # podSecurityContext
    #   runAsUser: 1000         # Run the Pod as user ID 1000
    #   runAsGroup: 3000        # Run the Pod as group ID 3000
    #   fsGroup: 2000           # Set file system group ownership to 2000
    podSecurityContext: {}
    # initContainersSecurityContext are key-values pairs to define the
    # security settings for all init containers. This field overwrites
    # the podSecurityContext settings if any defined.
    #
    # e.g
    # initContainers:
    #   runAsUser: 1000         # Run the Pod as user ID 1000
    #   runAsGroup: 3000        # Run the Pod as group ID 3000
    #   fsGroup: 2000           # Set file system group ownership to 2000
    initContainersSecurityContext:
      runAsUser: 1025
      runAsGroup: 1025
    # securityContext are key-values pairs to define the security settings
    # for the relayminer container. This field overwrites the podSecurityContext
    # settings if any defined.
    #
    # e.g.
    # capabilities:
    #     drop:
    #     - ALL
    #   readOnlyRootFilesystem: true
    #   runAsNonRoot: true
    #   runAsUser: 1000
    containersSecurityContext: {}
    # nodeSelector are key-values pairs to schedule the relayminer pod on a
    # specific node based on labels.
    nodeSelector: {}
    # affinity defines the settings for complex scheduling preferences.
    affinity: {}
    # tolerations defines policies for taints.
    tolerations: []
  fullnode:
    # activates the deployment of a fullnode.
    enabled: true
    cometbft:
      config: |
        # This is a TOML config file.
        # For more information, see https://github.com/toml-lang/toml
        
        # NOTE: Any path below can be absolute (e.g. "/var/myawesomeapp/data") or
        # relative to the home directory (e.g. "data"). The home directory is
        # "$HOME/.cometbft" by default, but could be changed via $CMTHOME env variable
        # or --home cmd flag.
        
        # The version of the CometBFT binary that created or
        # last modified the config file. Do not modify this.
        version = "1.0.1"
        
        #######################################################################
        ###                   Main Base Config Options                      ###
        #######################################################################

        # TCP or UNIX socket address of the ABCI application,
        # or the name of an ABCI application compiled in with the CometBFT binary
        proxy_app = "tcp://127.0.0.1:26658"

        # A custom human readable name for this node
        moniker = "dxps"

        # Database backend: badgerdb | goleveldb | pebbledb | rocksdb | cleveldb | boltdb
        # * badgerdb (uses github.com/dgraph-io/badger)
        #   - stable
        #   - pure go
        #   - use badgerdb build tag (go build -tags badgerdb)
        # * goleveldb (github.com/syndtr/goleveldb)
        #   - UNMAINTAINED
        #   - stable
        #   - pure go
        # * pebbledb (uses github.com/cockroachdb/pebble)
        #   - stable
        #   - pure go
        # * rocksdb (uses github.com/linxGnu/grocksdb)
        #   - requires gcc
        #   - use rocksdb build tag (go build -tags rocksdb)
        # * cleveldb (uses levigo wrapper)
        #   - DEPRECATED
        #   - requires gcc
        #   - use cleveldb build tag (go build -tags cleveldb)
        # * boltdb (uses etcd's fork of bolt - github.com/etcd-io/bbolt)
        #   - DEPRECATED
        #   - stable
        #   - use boltdb build tag (go build -tags boltdb)
        db_backend = "pebbledb"

        # Database directory
        db_dir = "data"

        # Output level for logging, including package level options
        log_level = "info"

        # Output format: 'plain' (colored text) or 'json'
        log_format = "plain"

        ##### additional base config options #####

        # Path to the JSON file containing the initial validator set and other meta data
        genesis_file = "config/genesis.json"

        # Path to the JSON file containing the private key to use as a validator in the consensus protocol
        priv_validator_key_file = "config/priv_validator_key.json"

        # Path to the JSON file containing the last sign state of a validator
        priv_validator_state_file = "data/priv_validator_state.json"

        # TCP or UNIX socket address for CometBFT to listen on for
        # connections from an external PrivValidator process
        priv_validator_laddr = ""

        # Path to the JSON file containing the private key to use for node authentication in the p2p protocol
        node_key_file = "config/node_key.json"

        # Mechanism to connect to the ABCI application: socket | grpc
        abci = "socket"

        # If true, query the ABCI app on connecting to a new peer
        # so the app can decide if we should keep the connection or not
        filter_peers = false


        #######################################################################
        ###                 Advanced Configuration Options                  ###
        #######################################################################

        #######################################################
        ###       RPC Server Configuration Options          ###
        #######################################################
        [rpc]

        # TCP or UNIX socket address for the RPC server to listen on
        laddr = "tcp://127.0.0.1:26657"

        # A list of origins a cross-domain request can be executed from
        # Default value '[]' disables cors support
        # Use '["*"]' to allow any origin
        cors_allowed_origins = []

        # A list of methods the client is allowed to use with cross-domain requests
        cors_allowed_methods = ["HEAD", "GET", "POST", ]

        # A list of non simple headers the client is allowed to use with cross-domain requests
        cors_allowed_headers = ["Origin", "Accept", "Content-Type", "X-Requested-With", "X-Server-Time", ]

        # Activate unsafe RPC commands like /dial_seeds and /unsafe_flush_mempool
        unsafe = false

        # Maximum number of simultaneous connections (including WebSocket).
        # If you want to accept a larger number than the default, make sure
        # you increase your OS limits.
        # 0 - unlimited.
        # Should be < {ulimit -Sn} - {MaxNumInboundPeers} - {MaxNumOutboundPeers} - {N of wal, db and other open files}
        # 1024 - 40 - 10 - 50 = 924 = ~900
        max_open_connections = 900

        # Maximum number of unique clientIDs that can /subscribe.
        # If you're using /broadcast_tx_commit, set to the estimated maximum number
        # of broadcast_tx_commit calls per block.
        max_subscription_clients = 100

        # Maximum number of unique queries a given client can /subscribe to.
        # If you're using /broadcast_tx_commit, set to the estimated maximum number
        # of broadcast_tx_commit calls per block.
        max_subscriptions_per_client = 5

        # Experimental parameter to specify the maximum number of events a node will
        # buffer, per subscription, before returning an error and closing the
        # subscription. Must be set to at least 100, but higher values will accommodate
        # higher event throughput rates (and will use more memory).
        experimental_subscription_buffer_size = 200

        # Experimental parameter to specify the maximum number of RPC responses that
        # can be buffered per WebSocket client. If clients cannot read from the
        # WebSocket endpoint fast enough, they will be disconnected, so increasing this
        # parameter may reduce the chances of them being disconnected (but will cause
        # the node to use more memory).
        #
        # Must be at least the same as "experimental_subscription_buffer_size",
        # otherwise connections could be dropped unnecessarily. This value should
        # ideally be somewhat higher than "experimental_subscription_buffer_size" to
        # accommodate non-subscription-related RPC responses.
        experimental_websocket_write_buffer_size = 200

        # If a WebSocket client cannot read fast enough, at present we may
        # silently drop events instead of generating an error or disconnecting the
        # client.
        #
        # Enabling this experimental parameter will cause the WebSocket connection to
        # be closed instead if it cannot read fast enough, allowing for greater
        # predictability in subscription behavior.
        experimental_close_on_slow_client = false

        # How long to wait for a tx to be committed during /broadcast_tx_commit.
        # WARNING: Using a value larger than 10s will result in increasing the
        # global HTTP write timeout, which applies to all connections and endpoints.
        # See https://github.com/tendermint/tendermint/issues/3435
        timeout_broadcast_tx_commit = "10s"

        # Maximum number of requests that can be sent in a batch
        # If the value is set to '0' (zero-value), then no maximum batch size will be
        # enforced for a JSON-RPC batch request.
        max_request_batch_size = 10

        # Maximum size of request body, in bytes
        max_body_bytes = 1000000

        # Maximum size of request header, in bytes
        max_header_bytes = 1048576

        # The path to a file containing certificate that is used to create the HTTPS server.
        # Might be either absolute path or path related to CometBFT's config directory.
        # If the certificate is signed by a certificate authority,
        # the certFile should be the concatenation of the server's certificate, any intermediates,
        # and the CA's certificate.
        # NOTE: both tls_cert_file and tls_key_file must be present for CometBFT to create HTTPS server.
        # Otherwise, HTTP server is run.
        tls_cert_file = ""

        # The path to a file containing matching private key that is used to create the HTTPS server.
        # Might be either absolute path or path related to CometBFT's config directory.
        # NOTE: both tls_cert_file and tls_key_file must be present for CometBFT to create HTTPS server.
        # Otherwise, HTTP server is run.
        tls_key_file = ""

        # pprof listen address (https://golang.org/pkg/net/http/pprof)
        pprof_laddr = ""

        #######################################################
        ###       gRPC Server Configuration Options         ###
        #######################################################

        #
        # Note that the gRPC server is exposed unauthenticated. It is critical that
        # this server not be exposed directly to the public internet. If this service
        # must be accessed via the public internet, please ensure that appropriate
        # precautions are taken (e.g. fronting with a reverse proxy like nginx with TLS
        # termination and authentication, using DDoS protection services like
        # CloudFlare, etc.).
        #

        [grpc]

        # TCP or UNIX socket address for the RPC server to listen on. If not specified,
        # the gRPC server will be disabled.
        laddr = "tcp://127.0.0.1:26658"

        #
        # Each gRPC service can be turned on/off, and in some cases configured,
        # individually. If the gRPC server is not enabled, all individual services'
        # configurations are ignored.
        #

        # The gRPC version service provides version information about the node and the
        # protocols it uses.
        [grpc.version_service]
        enabled = true

        # The gRPC block service returns block information
        [grpc.block_service]
        enabled = true

        # The gRPC block results service returns block results for a given height. If no height
        # is given, it will return the block results from the latest height.
        [grpc.block_results_service]
        enabled = true

        #
        # Configuration for privileged gRPC endpoints, which should **never** be exposed
        # to the public internet.
        #
        [grpc.privileged]
        # The host/port on which to expose privileged gRPC endpoints.
        laddr = ""

        #
        # Configuration specifically for the gRPC pruning service, which is considered a
        # privileged service.
        #
        [grpc.privileged.pruning_service]

        # Only controls whether the pruning service is accessible via the gRPC API - not
        # whether a previously set pruning service retain height is honored by the
        # node. See the [storage.pruning] section for control over pruning.
        #
        # Disabled by default.
        enabled = false

        #######################################################
        ###           P2P Configuration Options             ###
        #######################################################
        [p2p]

        # Address to listen for incoming connections
        laddr = "tcp://0.0.0.0:26656"

        # Address to advertise to peers for them to dial. If empty, will use the same
        # port as the laddr, and will introspect on the listener to figure out the
        # address. IP and port are required. Example: 159.89.10.97:26656
        external_address = ""

        # Comma separated list of seed nodes to connect to
        seeds = ""

        # Comma separated list of nodes to keep persistent connections to
        persistent_peers = ""

        # Path to address book
        addr_book_file = "config/addrbook.json"

        # Set true for strict address routability rules
        # Set false for private or local networks
        addr_book_strict = true

        # Maximum number of inbound peers
        max_num_inbound_peers = 40

        # Maximum number of outbound peers to connect to, excluding persistent peers
        max_num_outbound_peers = 10

        # List of node IDs, to which a connection will be (re)established ignoring any existing limits
        unconditional_peer_ids = ""

        # Maximum pause when redialing a persistent peer (if zero, exponential backoff is used)
        persistent_peers_max_dial_period = "0s"

        # Time to wait before flushing messages out on the connection
        flush_throttle_timeout = "10ms"

        # Maximum size of a message packet payload, in bytes
        max_packet_msg_payload_size = 1024

        # Rate at which packets can be sent, in bytes/second
        send_rate = 5120000

        # Rate at which packets can be received, in bytes/second
        recv_rate = 5120000

        # Set true to enable the peer-exchange reactor
        pex = true

        # Seed mode, in which node constantly crawls the network and looks for
        # peers. If another node asks it for addresses, it responds and disconnects.
        #
        # Does not work if the peer-exchange reactor is disabled.
        seed_mode = false

        # Comma separated list of peer IDs to keep private (will not be gossiped to other peers)
        private_peer_ids = ""

        # Toggle to disable guard against peers connecting from the same ip.
        allow_duplicate_ip = false

        # Peer connection configuration.
        handshake_timeout = "20s"
        dial_timeout = "3s"

        #######################################################
        ###          Mempool Configuration Options          ###
        #######################################################
        [mempool]

        # The type of mempool for this node to use.
        #
        #  Possible types:
        #  - "flood" : concurrent linked list mempool with flooding gossip protocol
        #  (default)
        #  - "nop"   : nop-mempool (short for no operation; the ABCI app is responsible
        #  for storing, disseminating and proposing txs). "create_empty_blocks=false" is
        #  not supported.
        type = "flood"

        # recheck (default: true) defines whether CometBFT should recheck the
        # validity for all remaining transaction in the mempool after a block.
        # Since a block affects the application state, some transactions in the
        # mempool may become invalid. If this does not apply to your application,
        # you can disable rechecking.
        recheck = true

        # recheck_timeout is the time the application has during the rechecking process
        # to return CheckTx responses, once all requests have been sent. Responses that
        # arrive after the timeout expires are discarded. It only applies to
        # non-local ABCI clients and when recheck is enabled.
        recheck_timeout = "1s"

        # broadcast (default: true) defines whether the mempool should relay
        # transactions to other peers. Setting this to false will stop the mempool
        # from relaying transactions to other peers until they are included in a
        # block. In other words, if Broadcast is disabled, only the peer you send
        # the tx to will see it until it is included in a block.
        broadcast = true

        # wal_dir (default: "") configures the location of the Write Ahead Log
        # (WAL) for the mempool. The WAL is disabled by default. To enable, set
        # wal_dir to where you want the WAL to be written (e.g.
        # "data/mempool.wal").
        wal_dir = ""

        # Maximum number of transactions in the mempool
        size = 5000

        # Maximum size in bytes of a single transaction accepted into the mempool.
        max_tx_bytes = 1048576

        # The maximum size in bytes of all transactions stored in the mempool.
        # This is the raw, total transaction size. For example, given 1MB
        # transactions and a 5MB maximum mempool byte size, the mempool will
        # only accept five transactions.
        max_txs_bytes = 67108864

        # Size of the cache (used to filter transactions we saw earlier) in transactions
        cache_size = 10000

        # Do not remove invalid transactions from the cache (default: false)
        # Set to true if it's not possible for any invalid transaction to become valid
        # again in the future.
        keep-invalid-txs-in-cache = false

        # Experimental parameters to limit gossiping txs to up to the specified number of peers.
        # We use two independent upper values for persistent and non-persistent peers.
        # Unconditional peers are not affected by this feature.
        # If we are connected to more than the specified number of persistent peers, only send txs to
        # ExperimentalMaxGossipConnectionsToPersistentPeers of them. If one of those
        # persistent peers disconnects, activate another persistent peer.
        # Similarly for non-persistent peers, with an upper limit of
        # ExperimentalMaxGossipConnectionsToNonPersistentPeers.
        # If set to 0, the feature is disabled for the corresponding group of peers, that is, the
        # number of active connections to that group of peers is not bounded.
        # For non-persistent peers, if enabled, a value of 10 is recommended based on experimental
        # performance results using the default P2P configuration.
        experimental_max_gossip_connections_to_persistent_peers = 0
        experimental_max_gossip_connections_to_non_persistent_peers = 0

        #######################################################
        ###         State Sync Configuration Options        ###
        #######################################################
        [statesync]
        # State sync rapidly bootstraps a new node by discovering, fetching, and restoring a state machine
        # snapshot from peers instead of fetching and replaying historical blocks. Requires some peers in
        # the network to take and serve state machine snapshots. State sync is not attempted if the node
        # has any local state (LastBlockHeight > 0). The node will have a truncated block history,
        # starting from the height of the snapshot.
        enable = false

        # RPC servers (comma-separated) for light client verification of the synced state machine and
        # retrieval of state data for node bootstrapping. Also needs a trusted height and corresponding
        # header hash obtained from a trusted source, and a period during which validators can be trusted.
        #
        # For Cosmos SDK-based chains, trust_period should usually be about 2/3 of the unbonding time (~2
        # weeks) during which they can be financially punished (slashed) for misbehavior.
        rpc_servers = ""
        trust_height = 0
        trust_hash = ""
        trust_period = "168h0m0s"

        # Time to spend discovering snapshots before initiating a restore.
        discovery_time = "15s"

        # Temporary directory for state sync snapshot chunks, defaults to the OS tempdir (typically /tmp).
        # Will create a new, randomly named directory within, and remove it when done.
        temp_dir = ""

        # The timeout duration before re-requesting a chunk, possibly from a different
        # peer (default: 1 minute).
        chunk_request_timeout = "10s"

        # The number of concurrent chunk fetchers to run (default: 1).
        chunk_fetchers = "4"

        #######################################################
        ###       Block Sync Configuration Options          ###
        #######################################################
        [blocksync]

        # Block Sync version to use:
        #
        # In v0.37, v1 and v2 of the block sync protocols were deprecated.
        # Please use v0 instead.
        #
        #   1) "v0" - the default block sync implementation
        version = "v0"

        #######################################################
        ###         Consensus Configuration Options         ###
        #######################################################
        [consensus]

        wal_file = "data/cs.wal/wal"

        # How long we wait for a proposal block before prevoting nil
        timeout_propose = "3s"
        # How much timeout_propose increases with each round
        timeout_propose_delta = "500ms"
        # How long we wait after receiving +2/3 prevotes for “anything” (ie. not a single block or nil)
        timeout_prevote = "1s"
        # How much the timeout_prevote increases with each round
        timeout_prevote_delta = "500ms"
        # How long we wait after receiving +2/3 precommits for “anything” (ie. not a single block or nil)
        timeout_precommit = "1s"
        # How much the timeout_precommit increases with each round
        timeout_precommit_delta = "500ms"
        # How long we wait after committing a block, before starting on the new
        # height (this gives us a chance to receive some more precommits, even
        # though we already have +2/3).
        # Set to 0 if you want to make progress as soon as the node has all the precommits.
        timeout_commit = "1s"

        # Deprecated: set `timeout_commit` to 0 instead.
        skip_timeout_commit = false

        # How many blocks to look back to check existence of the node's consensus votes before joining consensus
        # When non-zero, the node will panic upon restart
        # if the same consensus key was used to sign {double_sign_check_height} last blocks.
        # So, validators should stop the state machine, wait for some blocks, and then restart the state machine to avoid panic.
        double_sign_check_height = 0

        # EmptyBlocks mode and possible interval between empty blocks
        create_empty_blocks = true
        create_empty_blocks_interval = "0s"

        # Reactor sleep duration parameters
        peer_gossip_sleep_duration = "100ms"
        peer_gossip_intraloop_sleep_duration = "0s"
        peer_query_maj23_sleep_duration = "2s"

        #######################################################
        ###         Storage Configuration Options           ###
        #######################################################
        [storage]

        # Set to true to discard ABCI responses from the state store, which can save a
        # considerable amount of disk space. Set to false to ensure ABCI responses are
        # persisted. ABCI responses are required for /block_results RPC queries, and to
        # reindex events in the command-line tool.
        discard_abci_responses = false

        # The representation of keys in the database.
        # The current representation of keys in Comet's stores is considered to be v1
        # Users can experiment with a different layout by setting this field to v2.
        # Note that this is an experimental feature and switching back from v2 to v1
        # is not supported by CometBFT.
        # If the database was initially created with v1, it is necessary to migrate the DB
        # before switching to v2. The migration is not done automatically.
        # v1 - the legacy layout existing in Comet prior to v1.
        # v2 - Order preserving representation ordering entries by height.
        experimental_db_key_layout = "v1"

        # If set to true, CometBFT will force compaction to happen for databases that support this feature.
        # and save on storage space. Setting this to true is most benefits when used in combination
        # with pruning as it will physically delete the entries marked for deletion.
        # false by default (forcing compaction is disabled).
        compact = false

        # To avoid forcing compaction every time, this parameter instructs CometBFT to wait
        # the given amount of blocks to be pruned before triggering compaction.
        # It should be tuned depending on the number of items. If your retain height is 1 block,
        # it is too much of an overhead to try compaction every block. But it should also not be a very
        # large multiple of your retain height as it might occur bigger overheads.
        compaction_interval = "1000"

        [storage.pruning]

        # The time period between automated background pruning operations.
        interval = "10s"

        #
        # Storage pruning configuration relating only to the data companion.
        #
        [storage.pruning.data_companion]

        # Whether automatic pruning respects values set by the data companion. Disabled
        # by default. All other parameters in this section are ignored when this is
        # disabled.
        #
        # If disabled, only the application retain height will influence block pruning
        # (but not block results pruning). Only enabling this at a later stage will
        # potentially mean that blocks below the application-set retain height at the
        # time will not be available to the data companion.
        enabled = false

        # The initial value for the data companion block retain height if the data
        # companion has not yet explicitly set one. If the data companion has already
        # set a block retain height, this is ignored.
        initial_block_retain_height = 0

        # The initial value for the data companion block results retain height if the
        # data companion has not yet explicitly set one. If the data companion has
        # already set a block results retain height, this is ignored.
        initial_block_results_retain_height = 0

        #######################################################
        ###   Transaction Indexer Configuration Options     ###
        #######################################################
        [tx_index]

        # What indexer to use for transactions
        #
        # The application will set which txs to index. In some cases a node operator will be able
        # to decide which txs to index based on configuration set in the application.
        #
        # Options:
        #   1) "null"
        #   2) "kv" (default) - the simplest possible indexer, backed by key-value storage (defaults to levelDB; see DBBackend).
        # 		- When "kv" is chosen "tx.height" and "tx.hash" will always be indexed.
        #   3) "psql" - the indexer services backed by PostgreSQL.
        # When "kv" or "psql" is chosen "tx.height" and "tx.hash" will always be indexed.
        indexer = "kv"

        # The PostgreSQL connection configuration, the connection format:
        #   postgresql://<user>:<password>@<host>:<port>/<db>?<opts>
        psql-conn = ""

        #######################################################
        ###       Instrumentation Configuration Options     ###
        #######################################################
        [instrumentation]

        # When true, Prometheus metrics are served under /metrics on
        # PrometheusListenAddr.
        # Check out the documentation for the list of available metrics.
        prometheus = true

        # Address to listen for Prometheus collector(s) connections
        prometheus_listen_addr = ":26660"

        # Maximum number of simultaneous connections.
        # If you want to accept a larger number than the default, make sure
        # you increase your OS limits.
        # 0 - unlimited.
        max_open_connections = 3

        # Instrumentation namespace
        namespace = "cometbft"
      app: |
        # This is a TOML config file.
        # For more information, see https://github.com/toml-lang/toml

        ###############################################################################
        ###                           Base Configuration                            ###
        ###############################################################################

        # The minimum gas prices a validator is willing to accept for processing a
        # transaction. A transaction's fees must meet the minimum of any denomination
        # specified in this config (e.g. 0.25token1,0.0001token2).
        minimum-gas-prices = "0stake"

        # The maximum gas a query coming over rest/grpc may consume.
        # If this is set to zero, the query can consume an unbounded amount of gas.
        query-gas-limit = "0"

        # default: the last 362880 states are kept, pruning at 10 block intervals
        # nothing: all historic states will be saved, nothing will be deleted (i.e. archiving node)
        # everything: 2 latest states will be kept; pruning at 10 block intervals.
        # custom: allow pruning options to be manually specified through 'pruning-keep-recent', and 'pruning-interval'
        pruning = "default"

        # These are applied if and only if the pruning strategy is custom.
        pruning-keep-recent = "0"
        pruning-interval = "0"

        # HaltHeight contains a non-zero block height at which a node will gracefully
        # halt and shutdown that can be used to assist upgrades and testing.
        #
        # Note: Commitment of state will be attempted on the corresponding block.
        halt-height = 0

        # HaltTime contains a non-zero minimum block time (in Unix seconds) at which
        # a node will gracefully halt and shutdown that can be used to assist upgrades
        # and testing.
        #
        # Note: Commitment of state will be attempted on the corresponding block.
        halt-time = 0

        # MinRetainBlocks defines the minimum block height offset from the current
        # block being committed, such that all blocks past this offset are pruned
        # from CometBFT. It is used as part of the process of determining the
        # ResponseCommit.RetainHeight value during ABCI Commit. A value of 0 indicates
        # that no blocks should be pruned.
        #
        # This configuration value is only responsible for pruning CometBFT blocks.
        # It has no bearing on application state pruning which is determined by the
        # "pruning-*" configurations.
        #
        # Note: CometBFT block pruning is dependent on this parameter in conjunction
        # with the unbonding (safety threshold) period, state pruning and state sync
        # snapshot parameters to determine the correct minimum value of
        # ResponseCommit.RetainHeight.
        min-retain-blocks = 0

        # InterBlockCache enables inter-block caching.
        inter-block-cache = true

        # IndexEvents defines the set of events in the form {eventType}.{attributeKey},
        # which informs CometBFT what to index. If empty, all events will be indexed.
        #
        # Example:
        # ["message.sender", "message.recipient"]
        index-events = []

        # IavlCacheSize set the size of the iavl tree cache (in number of nodes).
        iavl-cache-size = 781250

        # IAVLDisableFastNode enables or disables the fast node feature of IAVL.
        # Default is false.
        iavl-disable-fastnode = false

        # AppDBBackend defines the database backend type to use for the application and snapshots DBs.
        # An empty string indicates that a fallback will be used.
        # The fallback is the db_backend value set in CometBFT's config.toml.
        app-db-backend = ""

        ###############################################################################
        ###                         Telemetry Configuration                         ###
        ###############################################################################

        [telemetry]

        # Prefixed with keys to separate services.
        service-name = ""

        # Enabled enables the application telemetry functionality. When enabled,
        # an in-memory sink is also enabled by default. Operators may also enabled
        # other sinks such as Prometheus.
        enabled = false

        # Enable prefixing gauge values with hostname.
        enable-hostname = false

        # Enable adding hostname to labels.
        enable-hostname-label = false

        # Enable adding service to labels.
        enable-service-label = false

        # PrometheusRetentionTime, when positive, enables a Prometheus metrics sink.
        prometheus-retention-time = 0

        # GlobalLabels defines a global set of name/value label tuples applied to all
        # metrics emitted using the wrapper functions defined in telemetry package.
        #
        # Example:
        # [["chain_id", "cosmoshub-1"]]
        global-labels = []

        # MetricsSink defines the type of metrics sink to use.
        metrics-sink = "mem"

        # StatsdAddr defines the address of a statsd server to send metrics to.
        # Only utilized if MetricsSink is set to "statsd" or "dogstatsd".
        statsd-addr = ""

        # DatadogHostname defines the hostname to use when emitting metrics to
        # Datadog. Only utilized if MetricsSink is set to "dogstatsd".
        datadog-hostname = ""

        ###############################################################################
        ###                           API Configuration                             ###
        ###############################################################################

        [api]

        # Enable defines if the API server should be enabled.
        enable = false

        # Swagger defines if swagger documentation should automatically be registered.
        swagger = false

        # Address defines the API server to listen on.
        address = "tcp://localhost:1317"

        # MaxOpenConnections defines the number of maximum open connections.
        max-open-connections = 1000

        # RPCReadTimeout defines the CometBFT RPC read timeout (in seconds).
        rpc-read-timeout = 10

        # RPCWriteTimeout defines the CometBFT RPC write timeout (in seconds).
        rpc-write-timeout = 0

        # RPCMaxBodyBytes defines the CometBFT maximum request body (in bytes).
        rpc-max-body-bytes = 1000000

        # EnableUnsafeCORS defines if CORS should be enabled (unsafe - use it at your own risk).
        enabled-unsafe-cors = false

        ###############################################################################
        ###                           gRPC Configuration                            ###
        ###############################################################################

        [grpc]

        # Enable defines if the gRPC server should be enabled.
        enable = true

        # Address defines the gRPC server address to bind to.
        address = "localhost:9090"

        # MaxRecvMsgSize defines the max message size in bytes the server can receive.
        # The default value is 10MB.
        max-recv-msg-size = "10485760"

        # MaxSendMsgSize defines the max message size in bytes the server can send.
        # The default value is math.MaxInt32.
        max-send-msg-size = "2147483647"

        # SkipCheckHeader defines if the gRPC server should bypass check header.
        skip-check-header = false

        ###############################################################################
        ###                        State Sync Configuration                         ###
        ###############################################################################

        # State sync snapshots allow other nodes to rapidly join the network without replaying historical
        # blocks, instead downloading and applying a snapshot of the application state at a given height.
        [state-sync]

        # snapshot-interval specifies the block interval at which local state sync snapshots are
        # taken (0 to disable).
        snapshot-interval = 0

        # snapshot-keep-recent specifies the number of recent snapshots to keep and serve (0 to keep all).
        snapshot-keep-recent = 2

        ###############################################################################
        ###                              State Streaming                            ###
        ###############################################################################

        # Streaming allows nodes to stream state to external systems.
        [streaming]

        # streaming.abci specifies the configuration for the ABCI Listener streaming service.
        [streaming.abci]

        # List of kv store keys to stream out via gRPC.
        # The store key names MUST match the module's StoreKey name.
        #
        # Example:
        # ["acc", "bank", "gov", "staking", "mint"[,...]]
        # ["*"] to expose all keys.
        keys = []

        # The plugin name used for streaming via gRPC.
        # Streaming is only enabled if this is set.
        # Supported plugins: abci
        plugin = ""

        # stop-node-on-err specifies whether to stop the node on message delivery error.
        stop-node-on-err = true

        ###############################################################################
        ###                         Mempool                                         ###
        ###############################################################################

        [mempool]

        # Setting max-txs to 0 will allow for a unbounded amount of transactions in the mempool.
        # Setting max_txs to negative 1 (-1) will disable transactions from being inserted into the mempool (no-op mempool).
        # Setting max_txs to a positive number (> 0) will limit the number of transactions in the mempool, by the specified amount.
        #
        # Note, this configuration only applies to SDK built-in app-side mempool
        # implementations.
        max-txs = -1
    # image is the root configuration for the container image to be used for the
    # fullnode.
    image:
      # repository defines which container image will be pulled from a container
      # registry.
      repository: ghcr.io/pokt-network/poktrolld
      # tag overrides the image tag.
      tag: "latest"
      # service is the root configuration when defining a Kubernetes Service object for the fullnode.
    service:
      # type defines the type of service we want to use for the fullnode servers
      # (ClusterIP, NodePort, etc...).
      #
      # see https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
      type: ClusterIP
    secret:
      keyName: "pocket-network-shannon-secrets"
    # storage is the root configuration for the fullnode persistent volume.
    storage:
      # defines how the the persistent volume can be mounted and access by the
      # fullnode Pod.
      accessModes: ["ReadWriteOnce"]
      # various storage configuration.
      resources:
        requests:
          200Gi
      # defines the filesystem layer between the pod and the volume.
      volumeMode: "Filesystem"
      # storage class to use for the fullnode persistent volume.
      storageClassName: "storageclassname"
    # initContainersSecurityContext are key-values pairs to define the
    # security settings for all init containers. This field overwrites
    # the podSecurityContext settings if any defined.
    #
    # e.g
    # initContainers:
    #   runAsUser: 1000         # Run the Pod as user ID 1000
    #   runAsGroup: 3000        # Run the Pod as group ID 3000
    #   fsGroup: 2000           # Set file system group ownership to 2000
    initContainersSecurityContext:
      runAsUser: 1025
      runAsGroup: 1025
