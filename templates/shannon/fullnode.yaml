{{- if and .Values.protocol "shannon" .Values.shannon.fullnode.enabled }}
{{- $config := .Values.shannon.fullnode.cometbft.config | fromToml }}
{{- $app := .Values.shannon.fullnode.cometbft.app | fromToml }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pocket-network.fullname" . }}-shannon-fullnode
  labels:
    {{- include "pocket-network.labels" (dict "root" . "nameSuffix" "shannon-fullnode" ) | nindent 4 }}
spec:
  serviceName: {{ include "pocket-network.fullname" . }}-shannon-fullnode
  replicas: 1
  selector:
    matchLabels:
      {{- include "pocket-network.selectorLabels" (dict "root" . "nameSuffix" "shannon-fullnode") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pocket-network.labels" (dict "root" . "nameSuffix" "shannon-fullnode" ) | nindent 8 }}
      {{- with .Values.shannon.fullnode.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.shannon.fullnode.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.shannon.fullnode.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "pocket-network.shannon.initcontainers.cosmossdk" . | nindent 8 }}
        {{- include "pocket-network.shannon.initcontainers.get-genesis" . | nindent 8 }}
        {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
        {{- include "pocket-network.shannon.initcontainers.cosmosvisor" . | nindent 8 }}
        {{- end }}
        {{- if .Values.shannon.fullnode.snapshot.enabled }}
        {{- include "pocket-network.shannon.initcontainers.snapshots" . | nindent 8 }}
        {{- end }}
        {{- include "pocket-network.shannon.initcontainers.permissions" . | nindent 8 }}
      containers:
        - name: fullnode
          {{- with .Values.shannon.fullnode.containersSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.shannon.fullnode.image.repository }}:{{ .Values.shannon.fullnode.image.tag | default .Values.version }}"
          {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
          command:
            - "/bin/cosmovisor"
          {{- end }}
          args:
            {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
            - "run"
            {{- end }}
            - "start"
            - "--home={{ .Values.homeDirectory }}"
            - "--log_level={{ .Values.shannon.fullnode.telemetry.logs.level }}"
            - "--log_format={{ .Values.shannon.fullnode.telemetry.logs.format }}"
            {{- if .Values.shannon.fullnode.telemetry.logs.noColor }}
            - "--log_no_color"
            {{- end }}
            {{- if .Values.shannon.fullnode.telemetry.trace.enabled }}
            - "--trace"
            {{- end }}
            {{- if .Values.shannon.fullnode.telemetry.trace.store }}
            - "--store={{ .Values.shannon.fullnode.telemetry.trace.store }}"
            {{- end }}
          ports:
            - name: rpc
              containerPort: {{- include "pocket-network.utils.extractPort" $config.rpc.laddr }}
              protocol: TCP
            - name: abci
              containerPort: {{- include "pocket-network.utils.extractPort" $config.proxy_app }}
              protocol: TCP
            {{- if $config.rpc.grpc_laddr }}
            - name: grpc
              containerPort: {{- include "pocket-network.utils.extractPort" $config.rpc.grpc_laddr }}
              protocol: TCP
            {{- end }}
            - name: p2p
              containerPort: {{- include "pocket-network.utils.extractPort" $config.p2p.laddr }}
              protocol: TCP
            {{- if $config.instrumentation.prometheus }}
            - name: metrics
              containerPort: {{- include "pocket-network.utils.extractPort" $config.instrumentation.prometheus_listen_addr }}
            {{- end }}
            {{- if $app.api.enable }}
            - name: app-api
              containerPort: {{- include "pocket-network.utils.extractPort" $app.api.address }}
              protocol: TCP
            {{- end }}
            {{- if $app.grpc.enable }}
            - name: app-grpc
              containerPort: {{- include "pocket-network.utils.extractPort" $app.grpc.address }}
              protocol: TCP
            {{- end }}
            {{- if (index $app "grpc-web" "enable") }}
            - name: app-grpc-web
              containerPort: {{- include "pocket-network.utils.extractPort" (index $app "grpc-web" "address") }}
              protocol: TCP
            {{- end }}
          {{- if .Values.shannon.fullnode.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /status
              port: {{- include "pocket-network.utils.extractPort" $config.rpc.laddr }}
            initialDelaySeconds: {{ .Values.shannon.fullnode.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.shannon.fullnode.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.shannon.fullnode.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.shannon.fullnode.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.shannon.fullnode.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.shannon.fullnode.resources.preset.enabled }}
          resources: {{- include "pocket-network.shannon.preset" (dict "type" .Values.shannon.fullnode.resources.preset.name) | nindent 12 }}
          {{- else }}
          resources: {{- toYaml .Values.shannon.fullnode.resources.values | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: "{{ .Values.homeDirectory }}"
            - name: fullnode-config
              mountPath: "{{ .Values.homeDirectory }}/config/config.toml"
              subPath: "{{ .Values.shannon.fullnode.cometbft.volumes.config.key.configKeyName }}"
            - name: fullnode-config
              mountPath: "{{ .Values.homeDirectory }}/config/app.toml"
              subPath: "{{ .Values.shannon.fullnode.cometbft.volumes.config.key.appKeyName }}"
            - name: fullnode-config
              mountPath: "{{ .Values.homeDirectory }}/config/client.toml"
              subPath: "{{ .Values.shannon.fullnode.cometbft.volumes.config.key.clientKeyName }}"
            {{- if eq .Values.shannon.fullnode.cometbft.secret.type "Secret" }}
            - name: keys
              mountPath: "{{ .Values.homeDirectory }}/config/node_key.json"
              subPath: "{{ .Values.shannon.fullnode.cometbft.secret.key.nodeKeyName }}"
              readOnly: true
            - name: keys
              mountPath: "{{ .Values.homeDirectory }}/config/priv_validator_key.json"
              subPath: "{{ .Values.shannon.fullnode.cometbft.secret.key.privValidatorKeyName }}"
              readOnly: true
            {{- end }}
            {{- with .Values.shannon.fullnode.volumeMounts }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
          env:
          {{- include "pocket-network.shannon.envs.cosmosvisor" . | nindent 10 }}
          {{- end }}
      volumes:
        {{- if not .Values.shannon.fullnode.storage.data.enabled }}
        - name: data
          emptyDir: {}
        {{- end }}
        - name: fullnode-config
          configMap:
            {{- if .Values.shannon.fullnode.cometbft.volumes.enabled }}
            name: {{ .Values.shannon.fullnode.cometbft.volumes.config.key.name }}
            {{- else }}
            name: {{ include "pocket-network.fullname" . }}-shannon-fullnode
            {{- end }}
        {{- if eq .Values.shannon.fullnode.cometbft.secret.type "Secret" }}
        - name: keys
          secret:
            secretName: {{ .Values.shannon.fullnode.cometbft.secret.key.name }}
        {{- end }}
        {{- if .Values.shannon.fullnode.snapshot.enabled }}
        {{- if .Values.shannon.fullnode.snapshot.customScript.enabled }}
        - name: snapshot-script
          {{- if and .Values.shannon.fullnode.snapshot.customScript.secret.name .Values.shannon.fullnode.snapshot.customScript.secret.key }}
          secret:
            secretName: {{ .Values.shannon.fullnode.snapshot.customScript.secret.name }}
            defaultMode: 0755
            items:
              - key: {{ .Values.shannon.fullnode.snapshot.customScript.secret.key }}
                path: "custom-script.sh"
          {{- end }}
          {{- if and .Values.shannon.fullnode.snapshot.customScript.configMap.name .Values.shannon.fullnode.snapshot.customScript.configMap.key }}
          configMap:
            name: {{ .Values.shannon.fullnode.snapshot.customScript.configMap.name }}
            defaultMode: 0755
            items:
              - key: {{ .Values.shannon.fullnode.snapshot.customScript.configMap.key }}
                path: "custom-script.sh"
          {{- end }}
        {{- end }}
        {{- end }}
        {{- with .Values.shannon.fullnode.volumes }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
      {{- with .Values.shannon.fullnode.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.shannon.fullnode.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.shannon.fullnode.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  persistentVolumeClaimRetentionPolicy:
  {{- with .Values.shannon.fullnode.storage.persistentVolumeClaimRetentionPolicy }}
    {{- toYaml . | nindent 6 }}
  {{- end }}
  {{- if .Values.shannon.fullnode.storage.data.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "pocket-network.labels" (dict "root" . "nameSuffix" "shannon-fullnode" ) | nindent 12 }}
        annotations:
        {{- with .Values.shannon.fullnode.storage.data.volumeClaimTemplate.annotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: {{ .Values.shannon.fullnode.storage.data.volumeClaimTemplate.accessModes }}
        storageClassName: {{ .Values.shannon.fullnode.storage.data.volumeClaimTemplate.storageClassName }}
        volumeMode: {{ .Values.shannon.fullnode.storage.data.volumeClaimTemplate.volumeMode }}
        {{- if .Values.shannon.fullnode.storage.data.volumeClaimTemplate.selector }}
        {{- with .Values.shannon.fullnode.storage.data.volumeClaimTemplate.selector }}
        selector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        resources:
        {{- with .Values.shannon.fullnode.storage.data.volumeClaimTemplate.resources }}
          {{- toYaml . | nindent 10 }}
        {{- end }}

  {{- end }}
{{- end }}
