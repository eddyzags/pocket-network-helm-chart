{{- if and .Values.protocol "shannon" .Values.shannon.fullnode.enabled }}
{{- $global := .Values }}
{{- $config := .Values.shannon.fullnode.cosmossdk.config | fromToml }}
{{- $app := .Values.shannon.fullnode.cosmossdk.app | fromToml }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "pocket-network.fullname" . }}-shannon-fullnode
  labels:
    {{- include "pocket-network.labels" (dict "root" . "nameSuffix" "shannon-fullnode" ) | nindent 4 }}
spec:
  serviceName: {{ include "pocket-network.fullname" . }}-shannon-fullnode
  replicas: 1
  selector:
    matchLabels:
      {{- include "pocket-network.selectorLabels" (dict "root" . "nameSuffix" "shannon-fullnode") | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "pocket-network.labels" (dict "root" . "nameSuffix" "shannon-fullnode" ) | nindent 8 }}
      {{- with .Values.shannon.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.shannon.fullnode.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.shannon.fullnode.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "pocket-network.shannon.initcontainers.fullnode.cosmossdk" . | nindent 8 }}
        {{- include "pocket-network.shannon.initcontainers.fullnode.get-genesis" . | nindent 8 }}
        {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
        {{- include "pocket-network.shannon.initcontainers.fullnode.cosmosvisor" . | nindent 8 }}
        {{- end }}
        {{- if .Values.shannon.fullnode.snapshot.enabled }}
        {{- include "pocket-network.shannon.initcontainers.fullnode.get-snapshot" . | nindent 8 }}
        {{- end }}
      containers:
        - name: fullnode
          {{- with .Values.shannon.fullnode.containersSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.shannon.fullnode.image.repository }}:{{ .Values.shannon.fullnode.image.tag | default .Values.version }}"
          {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
          command:
            - "/bin/cosmovisor"
          {{- end }}
          args:
            {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
            - "run"
            {{- end }}
            - "start"
            - "--home={{ .Values.workingDirectory }}"
            - "--log_level={{ .Values.shannon.fullnode.telemetry.logs.level }}"
            - "--log_format={{ .Values.shannon.fullnode.telemetry.logs.format }}"
            {{- if .Values.shannon.fullnode.telemetry.logs.noColor }}
            - "--log_no_color"
            {{- end }}
            {{- if .Values.shannon.fullnode.telemetry.trace.enabled }}
            - "--trace"
            {{- end }}
            {{- if .Values.shannon.fullnode.telemetry.trace.store }}
            - "--store={{ .Values.shannon.fullnode.telemetry.trace.store }}"
            {{- end }}
          ports:
            - name: rpc
              containerPort: {{- include "pocket-network.utils.extractPort" $config.rpc.laddr }}
              protocol: TCP
            - name: abci
              containerPort: {{- include "pocket-network.utils.extractPort" $config.proxy_app }}
              protocol: TCP
            {{- if $config.rpc.grpc_laddr }}
            - name: grpc
              containerPort: {{- include "pocket-network.utils.extractPort" $config.rpc.grpc_laddr }}
              protocol: TCP
            {{- end }}
            - name: p2p
              containerPort: {{- include "pocket-network.utils.extractPort" $config.p2p.laddr }}
              protocol: TCP
            {{- if $config.instrumentation.prometheus }}
            - name: metrics
              containerPort: {{- include "pocket-network.utils.extractPort" $config.instrumentation.prometheus_listen_addr }}
            {{- end }}
            {{- if $app.api.enable }}
            - name: app-api
              containerPort: {{- include "pocket-network.utils.extractPort" $app.api.address }}
              protocol: TCP
            {{- end }}
            {{- if $app.grpc.enable }}
            - name: app-grpc
              containerPort: {{- include "pocket-network.utils.extractPort" $app.grpc.address }}
              protocol: TCP
            {{- end }}
            {{- if (index $app "grpc-web" "enable") }}
            - name: app-grpc-web
              containerPort: {{- include "pocket-network.utils.extractPort" (index $app "grpc-web" "address") }}
              protocol: TCP
            {{- end }}
          {{- if .Values.shannon.fullnode.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: /status
              port: {{- include "pocket-network.utils.extractPort" $config.rpc.laddr }}
            initialDelaySeconds: {{ .Values.shannon.fullnode.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.shannon.fullnode.livenessProbe.periodSecond }}
            timeoutSeconds: {{ .Values.shannon.fullnode.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.shannon.fullnode.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.shannon.fullnode.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.shannon.fullnode.resources.preset.enabled }}
          resources: {{- include "pocket-network.shannon.fullnode.preset" (dict "type" .Values.shannon.fullnode.resources.preset.name) | nindent 12 }}
          {{- else }}
          resources: {{- toYaml .Values.shannon.fullnode.resources.values | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: working-directory-config
              mountPath: "{{ .Values.workingDirectory }}/config"
            - name: working-directory
              mountPath: "{{ .Values.workingDirectory }}/data"
              subPath: data
            - name: working-directory
              mountPath: "{{ .Values.workingDirectory }}/snapshot"
              subPath: snapshot
            - name: cosmossdk-config
              mountPath: "{{ .Values.workingDirectory }}/config/config.toml"
              subPath: "{{ .Values.shannon.fullnode.cosmossdk.volumes.config.key.configKeyName }}"
            - name: cosmossdk-config
              mountPath: "{{ .Values.workingDirectory }}/config/app.toml"
              subPath: "{{ .Values.shannon.fullnode.cosmossdk.volumes.config.key.appKeyName }}"
            - name: cosmossdk-config
              mountPath: "{{ .Values.workingDirectory }}/config/client.toml"
              subPath: "{{ .Values.shannon.fullnode.cosmossdk.volumes.config.key.clientKeyName }}"
            {{- if and .Values.shannon.fullnode.cosmossdk.secret.enabled (eq .Values.shannon.fullnode.cosmossdk.secret.type "Secret") }}
            - name: cometbft-keys
              mountPath: "{{ .Values.workingDirectory }}/config/node_key.json"
              subPath: "{{ .Values.shannon.fullnode.cosmossdk.secret.key.nodeKeyName }}"
              readOnly: true
            - name: cometbft-keys
              mountPath: "{{ .Values.workingDirectory }}/config/priv_validator_key.json"
              subPath: "{{ .Values.shannon.fullnode.cosmossdk.secret.key.privValidatorKeyName }}"
              readOnly: true
            {{- end }}
            {{- if .Values.shannon.fullnode.keyring.secrets }}
            {{- range .Values.shannon.fullnode.keyring.secrets }}
            {{- $name := .name }}
            {{- range .keyNames }}
            - name: keyring-{{ $name }}
              mountPath: "{{ $global.workingDirectory }}/keyring-test/{{ . }}"
              subPath: "{{ . }}"
              readOnly: true
            {{- end }}
            {{- end }}
            {{- end }}
            {{- if .Values.shannon.fullnode.tls.enabled }}
            - name: fullnode-tls
              mountPath: '{{ .Values.workingDirectory }}/{{ $config.rpc.tls_cert_file | default "tls.crt" }}'
              subPath: "{{ .Values.shannon.fullnode.tls.secret.key.certKeyName }}"
              readOnly: true
            - name: fullnode-tls
              mountPath: '{{ .Values.workingDirectory }}/{{ $config.rpc.tls_key_file | default "tls.key" }}'
              subPath: "{{ .Values.shannon.fullnode.tls.secret.key.keyKeyName }}"
              readOnly: true
            {{- end }}
            {{- with .Values.shannon.fullnode.volumeMounts }}
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- if .Values.shannon.fullnode.cosmosvisor.enabled }}
          env:
          {{- include "pocket-network.shannon.envs.cosmosvisor" . | nindent 10 }}
          {{- end }}
      volumes:
        - name: working-directory-config
          emptyDir: {}
        - name: cosmossdk-config
          configMap:
            {{- if .Values.shannon.fullnode.cosmossdk.volumes.enabled }}
            name: {{ .Values.shannon.fullnode.cosmossdk.volumes.config.key.name }}
            {{- else }}
            name: {{ include "pocket-network.fullname" . }}-shannon-fullnode
            {{- end }}
        {{- if and .Values.shannon.fullnode.cosmossdk.secret.enabled (eq .Values.shannon.fullnode.cosmossdk.secret.type "Secret") }}
        - name: cometbft-keys
          secret:
            secretName: {{ .Values.shannon.fullnode.cosmossdk.secret.key.name }}
        {{- end }}
        {{- if ne .Values.shannon.fullnode.storage.data.enabled true }}
        - name: working-directory
          emptyDir: {}
        {{- end }}
        {{- if .Values.shannon.fullnode.tls.enabled }}
        - name: fullnode-tls
          secret:
            secretName: {{ .Values.shannon.fullnode.tls.secret.key.name }}
        {{- end }}
        {{- if .Values.shannon.fullnode.keyring.secrets }}
        {{- range .Values.shannon.fullnode.keyring.secrets }}
        - name: keyring-{{ .name }}
          secret:
            secretName: {{ .name }}
        {{- end }}
        {{- end }}
        {{- with .Values.shannon.fullnode.volumes }}
          {{- toYaml . | nindent 6 }}
        {{- end }}
      {{- with .Values.shannon.fullnode.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.shannon.fullnode.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.shannon.fullnode.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.shannon.fullnode.storage.data.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: working-directory
        labels:
          {{- include "pocket-network.labels" (dict "root" . "nameSuffix" "shannon-fullnode" ) | nindent 12 }}
        annotations:
        {{- with .Values.shannon.fullnode.storage.data.annotations }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
      spec:
        accessModes: {{ .Values.shannon.fullnode.storage.data.volumeClaimTemplate.accessModes }}
        storageClassName: {{ .Values.shannon.fullnode.storage.data.volumeClaimTemplate.storageClassName }}
        volumeMode: {{ .Values.shannon.fullnode.storage.data.volumeClaimTemplate.volumeMode }}
        selector:
        {{- with .Values.shannon.fullnode.storage.data.volumeClaimTemplate.selector }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        resources:
        {{- with .Values.shannon.fullnode.storage.data.volumeClaimTemplate.resources }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
  {{- end }}
{{- end }}
